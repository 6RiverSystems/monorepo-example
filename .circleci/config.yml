version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15.3
        environment:
          DATABASE_URL: postgres://root:@127.0.0.1:5432/circle_test
          RUSH_ABSOLUTE_SYMLINKS: "true"
      - image: postgres:9
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
      - image: singularities/pubsub-emulator
        environment:
          PUBSUB_PROJECT_ID: test
          PUBSUB_LISTEN_ADDRESS: 0.0.0.0:8802
      - image: singularities/datastore-emulator
        environment:
          DATASTORE_PROJECT_ID: test
          DATASTORE_LISTEN_ADDRESS: 0.0.0.0:8803
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-v1-{{ checksum "common/config/rush/shrinkwrap.yaml" }}
            - dependencies-v1-
            - dependencies-v1
      - run:
          name: Set Up Environment
          command: |
            mkdir ci_scripts
            curl -H "Authorization: token $GITHUB_TOKEN" -H "Accept:application/vnd.github.v3.raw"  https://api.github.com/repos/6RiverSystems/ci_scripts/contents/ci_tool.sh > ci_scripts/ci_tool.sh
            chmod +x ci_scripts/ci_tool.sh
            ci_scripts/ci_tool.sh --setup_npm
      - run:
          name: Check Dependencies
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js check
      - run:
          name: Install Dependencies
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js install
      - run:
          name: Build
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js rebuild
      - run:
          name: Test
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js test-ci
      - run:
          name: Pact Acceptance Tests
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js test-ci-pact
      - run:
          name: Coverage
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js coverage
            mkdir -p coverage
            for p in packages/* ; do [ -d "$p" -a -d "$p/coverage" ] || continue ; pp="$(basename "$p")" ; cp -av "$p/coverage" "coverage/$pp" ; done
      - run:
          name: upload coverage
          command: |
            sudo npm i -g lcov-result-merger codecov
            lcov-result-merger 'packages/*/coverage/lcov.info' 'lcov-merged.out'
            cat "lcov-merged.out" | codecov || true
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: rush-logs
      - store_artifacts:
          path: /home/circleci/project/reports/junit/
      - store_test_results:
          path: /home/circleci/project/reports/junit/
      - save_cache:
          key: dependencies-v1-{{ checksum "common/config/rush/shrinkwrap.yaml" }}
          paths:
            - "/home/circleci/.rush"
            - "./common/temp"
      - persist_to_workspace:
          root: ./
          paths:
            - .
  deploy:
    docker:
      - image: circleci/node:10.15.3
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - dependencies-v1-{{ checksum "common/config/rush/shrinkwrap.yaml" }}
      - run:
          name: Setup Tag for new version and then release
          command: |
            ./repo-tools/scripts/version.sh
      - run:
          name: Publish
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js publish --include-all -r https://sixriver.jfrog.io/sixriver/api/npm/npm-local/ -p --version-policy prerelease
      - run:
          name: Build Rush Cache Image
          command: |
            repo-tools/scripts/create-base-docker.sh
      - run:
          name: Release
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js release
      - run:
          name: Publish Pacts
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js publish-pacts
      - store_artifacts:
          path: rush-logs

workflows:
  version: 2

  build-deploy:
    jobs:
      - build:
          context: 6rs-circle
      - deploy:
          context: 6rs-circle
          requires:
            - build
