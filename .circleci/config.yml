orbs:
  gcp-cli: circleci/gcp-cli@2.1.0

version: 2.1

jobs:
  install:
    docker:
      - image: cimg/node:12.22.1
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - checkout
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
      - restore_cache:
          name: Restore Rush Local Cache
          keys:
            - rush-local-v1-{{ checksum "common/config/rush/pnpm-lock.yaml" }}
      - run:
          name: Initialize ci_scripts
          command: |
            mkdir ci_scripts
            curl -H "Authorization: token $GITHUB_TOKEN" -H "Accept:application/vnd.github.v3.raw" https://api.github.com/repos/6RiverSystems/ci_scripts/contents/ci_tool.sh > ci_scripts/ci_tool.sh
            chmod +x ci_scripts/ci_tool.sh
            ci_scripts/ci_tool.sh --setup_npm
      - run:
          name: Check Dependencies
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js check
      - run:
          name: Install Dependencies
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js install --no-link
      - run:
          name: Link Dependencies
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js link --force
      - run:
          name: Determine New Version Number
          command: |
            ./repo-tools/scripts/version.sh
      - save_cache:
          name: Save Rush Global Cache
          key: rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
          paths:
            - "/home/circleci/.rush"
      - store_artifacts:
          path: rush-logs
      - store_artifacts:
          path: .version
      - persist_to_workspace:
          root: ./
          paths:
            - .

  save-local-cache:
    docker:
      - image: cimg/node:12.22.1
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - attach_workspace:
          at: ./
      - save_cache:
          name: Save Rush Local Cache
          key: rush-local-v1-{{ checksum "common/config/rush/pnpm-lock.yaml" }}
          paths:
            - "./common/temp"

  build:
    docker:
      - image: cimg/node:12.22.1
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
      - run:
          name: Build
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js rebuild
      - store_artifacts:
          path: rush-logs
      - persist_to_workspace:
          root: ./
          paths:
            # shouldn't need to re-persist all the higher layer things, just wastes time
            - ./packages/
            - ./common/temp/rush-link.json

  lint:
    docker:
      - image: cimg/node:12.22.1
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
      - run:
          name: Lint
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js lint
      - store_artifacts:
          path: rush-logs
      - store_artifacts:
          path: /home/circleci/project/reports/junit/
      - store_test_results:
          path: /home/circleci/project/reports/junit/

  test:
    docker:
      - image: cimg/node:12.22.1
        environment:
          DATABASE_URL: postgres://root:@127.0.0.1:5432/circle_test
          RUSH_ABSOLUTE_SYMLINKS: "true"
          LANG: en_US.UTF8
      - image: postgres:9-alpine
        environment:
          LANG: en_US.UTF8
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: gcr.io/plasma-column-128721/pubsub-emulator:latest
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
        environment:
          PUBSUB_PROJECT_ID: test
          PUBSUB_LISTEN_ADDRESS: 0.0.0.0:8802
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
      - run:
          name: Test
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js test-ci
      - run:
          name: Coverage
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js coverage
            mkdir -p coverage
            for p in packages/* ; do [ -d "$p" -a -d "$p/coverage" ] || continue ; pp="$(basename "$p")" ; cp -av "$p/coverage" "coverage/$pp" ; done
      - run:
          name: upload coverage
          command: |
            bash <( curl -s https://codecov.io/bash ) -s coverage
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: rush-logs
      - store_artifacts:
          path: /home/circleci/project/reports/junit/
      - store_test_results:
          path: /home/circleci/project/reports/junit/

  deploy-npm:
    docker:
      - image: cimg/node:12.22.1
        environment:
          RUSH_ABSOLUTE_SYMLINKS: "true"
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}-{{ checksum ".node-version" }}
      - run:
          name: Set Up Environment
          # have to repeat this step because it stores stuff in ~/.npmrc which isn't cached
          command: |
            ci_scripts/ci_tool.sh --setup_npm
      - run:
          name: Publish NPM Packages
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js publish --include-all -r https://sixriver.jfrog.io/sixriver/api/npm/npm-local/ -p --version-policy prerelease
      - store_artifacts:
          path: rush-logs

  tag-docker:
    docker:
      - image: cimg/node:12.22.1
    steps:
      - gcp-cli/install
      - attach_workspace:
          at: ./
      - run:
          name: Tags built images with proper version
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js tag-docker

  deploy-docker:
    docker:
      - image: cimg/node:12.22.1
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          name: Initialize Docker
          command: |
            ci_scripts/ci_tool.sh --docker_login
      - run:
          name: Run rush deploy init
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js init-deploy-global
      - run:
          name: Run rush deploy and build docker images
          command: |
            repo-tools/scripts/run-rush-collect-logs.sh rush-logs node common/scripts/install-run-rush.js build-publish-docker
workflows:
  version: 2

  build-deploy:
    jobs:
      - install:
          context: 6rs-circle
      - build:
          context: 6rs-circle
          requires:
            - install
      - lint:
          context: 6rs-circle
          requires:
            - install
      - test:
          context: 6rs-circle
          requires:
            - build
      - deploy-npm:
          name: deploy-npm-release
          context: 6rs-circle
          filters:
            branches:
              only:
                - main
                - /^lts
          requires:
            - lint
            - build
            - test
      - deploy-npm:
          context: 6rs-circle
          filters:
            branches:
              ignore:
                - main
                - /^lts
          requires:
            - build
      - deploy-docker:
          context: 6rs-circle
          requires:
            - build
      - tag-docker:
          name: tag-docker-release
          context: 6rs-circle
          filters:
            branches:
              only:
                - main
                - /^lts
          requires:
            - test
            - lint
            - deploy-docker
      - tag-docker:
          context: 6rs-circle
          filters:
            branches:
              ignore:
                - main
                - /^lts
          requires:
            - deploy-docker
      - save-local-cache:
          context: 6rs-circle
          requires:
            - install
